<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间,作用就是对sql进行分类化管理,理解sql隔离
注意:使用mapper代理方法开发,namespace有特殊重要的作用,namespace等于mapper接口地址-->
<mapper namespace="com.qxx.dao.BlogDao">

    <!--mapper作用:为DAO接口方法提供sql语句配置-->

    <insert id="createBlog" parameterType="BlogEntity">
        INSERT INTO blog (title,content,user_id,pub_date)
        VALUES (#{title},#{content},#{userId},#{pubDate})
    </insert>

    <delete id="deleteBlogById" parameterType="long">
        DELETE FROM blog WHERE id = #{id}
    </delete>

    <update id="updateBlog" parameterType="BlogEntity">
        UPDATE blog set title = #{title},content = #{content},userId = #{userId},pubDate = #{pubDate} WHERE id = #{id}
    </update>

    <select id="getBlogById" parameterType="long" resultType="BlogEntity">
        SELECT * FROM blog WHERE id = #{id}
    </select>

    <select id="getBlogByTitle" parameterType="String" resultType="BlogEntity">
        SELECT * FROM blog WHERE title like CONCAT('%',#{title},'%')
    </select>

    <select id="getBlogs" resultType="BlogEntity">
        SELECT * FROM blog ORDER BY id limit #{offset},#{limit}
    </select>
</mapper>